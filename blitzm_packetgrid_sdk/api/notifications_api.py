# coding: utf-8

"""
    packetgrid-server-api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    OpenAPI spec version: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import re  # noqa: F401

# python 2 and python 3 compatibility library
import six

from blitzm_packetgrid_sdk.api_client import ApiClient


class NotificationsApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def send(self, command, **kwargs):  # noqa: E501
        """send  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.send(command, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param SendNotification command: (required)
        :param str idempotency_key: This header can optionally be provided to ensure duplicate requests are ignored. The value of this header must be key (string) that uniquely identifies the API request. If the service receives a request with a duplicate Idempotency-Key value it will return a cached response to ensure that any side effects the request might have are not duplicated. Idempotency-Keys are cached for 24 hours. API Clients are advised to make use of Idempotency-Keys for API requests that implement failure-retries. 
        :return: DispatchReport
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.send_with_http_info(command, **kwargs)  # noqa: E501
        else:
            (data) = self.send_with_http_info(command, **kwargs)  # noqa: E501
            return data

    def send_with_http_info(self, command, **kwargs):  # noqa: E501
        """send  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.send_with_http_info(command, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param SendNotification command: (required)
        :param str idempotency_key: This header can optionally be provided to ensure duplicate requests are ignored. The value of this header must be key (string) that uniquely identifies the API request. If the service receives a request with a duplicate Idempotency-Key value it will return a cached response to ensure that any side effects the request might have are not duplicated. Idempotency-Keys are cached for 24 hours. API Clients are advised to make use of Idempotency-Keys for API requests that implement failure-retries. 
        :return: DispatchReport
                 If the method is called asynchronously,
                 returns the request thread.
        """

        local_var_params = locals()

        all_params = ['command', 'idempotency_key']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        for key, val in six.iteritems(local_var_params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method send" % key
                )
            local_var_params[key] = val
        del local_var_params['kwargs']
        # verify the required parameter 'command' is set
        if ('command' not in local_var_params or
                local_var_params['command'] is None):
            raise ValueError("Missing the required parameter `command` when calling `send`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []

        header_params = {}
        if 'idempotency_key' in local_var_params:
            header_params['Idempotency-Key'] = local_var_params['idempotency_key']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        if 'command' in local_var_params:
            body_params = local_var_params['command']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['*/*'])  # noqa: E501

        # Authentication setting
        auth_settings = ['Token']  # noqa: E501

        return self.api_client.call_api(
            '/notifications/send/', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='DispatchReport',  # noqa: E501
            auth_settings=auth_settings,
            async_req=local_var_params.get('async_req'),
            _return_http_data_only=local_var_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=local_var_params.get('_preload_content', True),
            _request_timeout=local_var_params.get('_request_timeout'),
            collection_formats=collection_formats)
